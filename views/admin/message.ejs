<div class="d-flex justify-content-between align-items-center mb-4">
    <h4 class="text-success"><i class="fa fa-comment me-2"></i>Manajemen Pesan</h4>
</div>

<!-- Statistik Pesan -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="stat-card">
            <h5>Total Pesan Dikirim</h5>
            <h2 class="text-success" id="totalSent">0/0</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <h5>Pesan Tertunda</h5>
            <h2 class="text-secondary" id="pendingCount">0</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <h5>Pesan Diproses</h5>
            <h2 class="text-warning" id="processingCount">0</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <h5>Pesan Gagal</h5>
            <h2 class="text-danger" id="failedCount">0</h2>
        </div>
    </div>
</div>




<div class="row">
    <div class="col-md-12">
        <div class="stat-card">
            <h5 class="mb-4"><i class="fa fa-envelope me-2"></i>Daftar Pesan</h5>

            <!-- Tabs -->
            <ul class="nav nav-tabs mb-3">
                <li class="nav-item">
                    <a class="nav-link active" href="#" onclick="filterPesan('all')">Semua</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterPesan('pending')">Pending</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterPesan('processing')">Processing</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterPesan('sent')">Sent</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterPesan('failed')">Failed</a>
                </li>
            </ul>
            <div class="row mb-3">
                <div class="col-md-12">
                    <input type="text" id="searchInput" class="form-control"
                        placeholder="Cari Nomor Tujuan, Isi Pesan, Tipe, atau Status..." onkeyup="filterPesan()">
                </div>
            </div>


            <!-- Tabel Pesan -->
            <table class="table table-striped table-hover" id="pesanTable">
                <thead>
                    <tr>
                        <th>Waktu</th>
                        <th>Nomor Tujuan</th>
                        <th>Isi Pesan</th>
                        <th>Tipe</th>
                        <th>Status</th>
                        <th style="width: 100px;">Aksi</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>


        </div>
    </div>

</div>


<!-- Floating Button -->
<button class="floating-button" data-bs-toggle="modal" data-bs-target="#formKirimPesan">+</button>

<!-- Form Dialog Kirim Pesan -->
<div id="formKirimPesan" class="modal" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="sendMessageForm">
                <div class="modal-header">
                    <h5 class="modal-title">Kirim Pesan</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Perangkat</label>
                        <select id="device" class="form-control">
                            <% devices.forEach(device=> { %>
                                <option value="<%= device.device_key %>">
                                    <%= device.name %> (<%= device.phone %>)
                                </option>
                                <% }) %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Tipe Pesan:</label>
                        <select id="group" class="form-control" required>
                            <option value="false">Pribadi</option>
                            <option value="true">Grup</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Tujuan:</label>
                        <input type="text" id="to" class="form-control"
                            placeholder="Nomor telepon atau ID grup (pisahkan dengan koma)" required>
                    </div>
                    <div class="form-group">
                        <label>Isi Pesan:</label>
                        <textarea id="text" class="form-control" rows="4" placeholder="Tulis pesan Anda..."
                            required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-secondary" data-bs-dismiss="modal">Batalkan</a>
                    <button id="sendMessageButton" class="btn btn-success" type="submit">Kirim</button>
                </div>
            </form>
        </div>
    </div>
</div>

<input type="hidden" id="apiKey" value="<%= apiKey %>">


<!-- Pastikan Moment.js sudah tersedia -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
<script>
    let refreshInterval; // Variabel untuk menyimpan interval

    async function filterPesan(status = 'all') {
        try {
            const searchKeyword = document.getElementById('searchInput').value.toLowerCase();
            const response = await fetch(`/admin/message/data?status=${status}`);
            const data = await response.json();
            console.log(data);
            if (!data.success) {
                console.error("Gagal mengambil data pesan.");
                return;
            }
            const tbody = document.querySelector('#pesanTable tbody');
            tbody.innerHTML = ""; // Kosongkan tabel sebelum mengisi ulang
            if (data.messages.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">Tidak ada pesan terdaftar</td></tr>';
                return;
            }
            data.messages.forEach(message => {
                const statusClass = {
                    'processing': 'warning',
                    'sent': 'success',
                    'failed': 'danger',
                    'pending': 'secondary'
                }[message.status] || 'default';
                const formattedTime = moment(message.updated_at || message.created_at).format("YYYY/MM/DD HH:mm");
                const row = `
                    <tr data-status="${message.status}">
                        <td>${formattedTime}</td>
                        <td>${message.number}</td>
                        <td>${message.message}</td>
                        <td>${message.type}</td>
                        <td><span class="badge bg-${statusClass}">${message.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-warning btn-action" onclick="confirmDeleteRetry('${message.id}')">
                                <i class="fa fa-repeat"></i>
                            </button>
                            <button class="btn btn-sm btn-danger btn-action" onclick="confirmDelete('${message.id}')">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                tbody.innerHTML += row;
            });
            document.getElementById('totalSent').innerText = `${data.counts.sent}/${data.counts.totalCount}`;
            document.getElementById('pendingCount').innerText = data.counts.pending;
            document.getElementById('processingCount').innerText = data.counts.processing;
            document.getElementById('failedCount').innerText = data.counts.failed;
            // Update tab aktif
            document.querySelectorAll('.nav-tabs .nav-link').forEach(tab => tab.classList.remove('active'));
            document.querySelector(`.nav-tabs .nav-link[data-status="${status}"]`)?.classList.add('active');
        } catch (error) {
            console.error("Error fetching messages:", error);
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        filterPesan('all');
    });

    function toggleAutoRefresh() {
        const autoRefreshCheckbox = document.getElementById('autoRefreshCheckbox');
        if (autoRefreshCheckbox.checked) {
            startAutoRefresh();
        } else {
            stopAutoRefresh();
        }
    }

    function startAutoRefresh() {
        refreshInterval = setInterval(() => {
            const activeTab = document.querySelector('.nav-tabs .nav-link.active');
            const activeStatus = activeTab ? activeTab.getAttribute('data-status') : 'all';
            filterPesan(activeStatus); // Panggil filterPesan berdasarkan tab yang aktif
        }, 15000); // 15 detik
    }

    function stopAutoRefresh() {
        clearInterval(refreshInterval);
    }

    $("#sendMessageForm").submit(async function (event) {
        event.preventDefault();
        const apiKey = $("#apiKey").val();
        const deviceKey = $("#device").val();
        const to = $("#to").val().trim();
        const text = $("#text").val().trim();
        const group = $("#group").val() === "true";
        const sendMessageButton = document.getElementById('sendMessageButton');

        if (!deviceKey || !to || !text) {
            alert("Semua field harus diisi!");
            return;
        }
        // Disable tombol dan ubah teks jadi "Memproses..."
        sendMessageButton.disabled = true;
        sendMessageButton.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Memproses...';

        $.ajax({
            url: "/bot/message",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                apiKey: apiKey,
                deviceKey: deviceKey,
                to: to,
                text: text,
                isGroup: group
            }),
            success: function (response) {
                alert(response.message);
                console.log("Pesan berhasil dikirim:", response);

                // Ambil status tab yang aktif
                const activeTab = document.querySelector('.nav-tabs .nav-link.active');
                const activeStatus = activeTab ? activeTab.getAttribute('data-status') : 'all';

                // Filter pesan berdasarkan status tab yang aktif
                filterPesan(activeStatus);
            },
            error: function (xhr, status, error) {
                alert("Terjadi kesalahan saat mengirim pesan.");
                console.error("Gagal mengirim pesan:", xhr.responseText || error);
            },
            complete: function () {
                sendMessageButton.disabled = false;
                sendMessageButton.innerHTML = 'Kirim';
            }
        });
    });

    async function confirmDelete(id) {
        if (!confirm(`Apakah Anda yakin ingin menghapus pesan ${id}?`)) return;
        const apiKey = document.getElementById('apiKey').value;
        try {
            const response = await fetch(`/admin/message/remove?apiKey=${encodeURIComponent(apiKey)}&id=${encodeURIComponent(id)}`, {
                method: 'DELETE',
            });
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const result = await response.json();
            if (result.status) {
                alert('Pesan berhasil dihapus!');

                // Ambil status tab yang aktif
                const activeTab = document.querySelector('.nav-tabs .nav-link.active');
                const activeStatus = activeTab ? activeTab.getAttribute('data-status') : 'all';

                // Filter pesan berdasarkan status tab yang aktif
                filterPesan(activeStatus);
            } else {
                throw new Error(result.message || 'Gagal menghapus pesan');
            }
        } catch (error) {
            console.error('Error:', error);
            alert(`Error: ${error.message}`);
        }
    }

    // Hentikan interval saat halaman ditutup atau tidak digunakan lagi
    window.addEventListener("beforeunload", function () {
        clearInterval(refreshInterval);
    });
</script>


<!-- HTML untuk Judul Daftar Pesan -->
<div style="display: flex; justify-content: space-between; align-items: center;">
    <h3></h3>
    <label style="margin-right: 10px;">
        <input type="checkbox" id="autoRefreshCheckbox" onchange="toggleAutoRefresh()"> Auto Refresh
    </label>
</div>