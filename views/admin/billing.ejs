<div class="d-flex justify-content-between align-items-center mb-4">
    <h4 class="text-success"><i class="fa fa-dollar-sign me-2"></i>Manajemen Billing</h4>
</div>
<!-- Statistik Saldo -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="stat-card">
            <h5>Saldo Tersedia</h5>
            <h2>Rp <%= balance.toLocaleString() %>
            </h2>
            <small>Update terakhir: 5 menit lalu</small>
        </div>
    </div>
    <div class="col-md-4">
        <div class="stat-card">
            <h5>Pemakaian Bulan Ini</h5>
            <h2>Rp <%= totalUsed.toLocaleString() %>
            </h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="stat-card">
            <h5>Tagihan Belum Lunas</h5>
            <h2>1 Invoice</h2>
            <small>Jatuh tempo 3 hari</small>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        <div class="stat-card">
            <h5 class="mb-4"><i class="fa fa-history me-2"></i>Riwayat Transaksi</h5>
            <!-- Tabs -->
            <ul class="nav nav-tabs mb-3">
                <li class="nav-item">
                    <a class="nav-link active" href="#" onclick="filterTransaksi('all')">Semua</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterTransaksi('success')">Success</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterTransaksi('paid')">Paid</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterTransaksi('failed')">Failed</a>
                </li>
            </ul>

            <!-- Tabel Transaksi -->
            <table class="table table-striped table-hover" id="transaksiTable">
                <thead>
                    <tr>
                        <th>Tanggal</th>
                        <th>Deskripsi</th>
                        <th>Jumlah</th>
                        <th>Status</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (transactions.length===0) { %>
                        <tr>
                            <td colspan="5" class="text-center">Tidak ada riwayat transaksi</td>
                        </tr>
                        <% } else { %>
                            <% transactions.forEach(tx=> { %>
                                <tr>
                                    <td>
                                        <%= tx.formattedDate %>
                                    </td>
                                    <td>
                                        <%= tx.description %>
                                    </td>
                                    <td>
                                        <%= tx.amountFormatted %>
                                    </td>
                                    <td>
                                        <% if (tx.status==='success' ) { %>
                                            <span class="badge bg-success">Success</span>
                                            <% } else if (tx.status==='paid' ) { %>
                                                <span class="badge bg-primary">Paid</span>
                                                <% } else if (tx.status==='failed' ) { %>
                                                    <span class="badge bg-danger">Failed</span>
                                                    <% } else { %>
                                                        <span class="badge bg-secondary">Pending</span>
                                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (tx.status==='pending' && tx.reference !=null ) { %>
                                            <a href="javascript:void(0);" class="btn btn-warning btn-sm"
                                                onClick="payPending('<%= tx.merchantOrderId %>')">
                                                Bayar
                                            </a>
                                            <% } %>
                                    </td>
                                </tr>
                                <% }); %>
                                    <% } %>
                </tbody>
            </table>

        </div>
    </div>
    <div class="col-md-4">
        <div class="stat-card">
            <h5 class="mb-4"><i class="fa fa-credit-card me-2"></i>Top-Up Saldo</h5>
            <form id="topUpForm">
                <div class="mb-3">
                    <label>Jumlah Top-Up</label>
                    <input type="number" id="amount" class="form-control" placeholder="Masukkan jumlah top-up" required
                        min="1">
                </div>
                <div class="mb-3">
                    <label>Metode Pembayaran</label>
                    <select id="paymentMethod" class="form-control" required>
                        <option value="VC">Virtual Account</option>
                        <option value="EW">E-Wallet</option>
                        <option value="BT">Bank Transfer</option>
                    </select>
                </div>
                <button id="topUpButton" class="btn btn-success w-100" type="submit">
                    Lanjutkan Top-Up
                </button>
            </form>
        </div>
    </div>
</div>

<script src="https://app-sandbox.duitku.com/lib/js/duitku.js"></script>
<input type="hidden" id="apiKey" value="<%= apiKey %>">
<script>
    async function payPending(merchantOrderId) {
        try {
            const btn = $(`a[onclick="payPending('${merchantOrderId}')"]`);
            btn.text('Memeriksa...').prop('disabled', true); // Tampilkan loading di tombol

            const response = await fetch(`/check-pending-transaction?merchantOrderId=${merchantOrderId}`, {
                method: 'GET',
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();

            if (result.success && result.hasPending) {
                if (result.reference) {
                    // Pastikan Duitku library sudah dimuat
                    if (typeof checkout === "undefined") {
                        alert("Error: Duitku library tidak ditemukan!");
                        btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
                        return;
                    }

                    // Ubah teks tombol saat pembayaran diproses
                    btn.text('Sedang Diproses...');

                    // Proses pembayaran dengan Duitku Pop-Up
                    checkout.process(result.reference, {
                        defaultLanguage: "id",
                        successEvent: function (response) {
                            console.log('Pembayaran berhasil:', response);
                            alert('Pembayaran berhasil!');
                            btn.text('Lunas').prop('disabled', true).removeClass('btn-primary').addClass('btn-success'); // Update tombol
                        },
                        pendingEvent: function (response) {
                            console.log('Pembayaran sedang diproses:', response);
                            alert('Pembayaran sedang diproses.');
                            btn.text('Menunggu Konfirmasi...').prop('disabled', true); // Update tombol
                        },
                        errorEvent: function (response) {
                            console.error('Pembayaran gagal:', response);
                            alert('Pembayaran gagal. Silakan coba lagi.');
                            btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
                        },
                        closeEvent: function (response) {
                            console.log('User menutup popup tanpa menyelesaikan pembayaran:', response);
                            alert('Anda menutup popup tanpa menyelesaikan pembayaran.');
                            btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
                        }
                    });

                } else {
                    alert('Referensi transaksi tidak ditemukan.');
                    btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
                }
            } else {
                alert('Tidak ada transaksi pending yang ditemukan.');
                btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
            }
        } catch (error) {
            console.error('Error checking pending transaction:', error);
            alert('Terjadi kesalahan saat memeriksa transaksi pending.');
            btn.text('Bayar').prop('disabled', false); // Kembalikan tombol ke kondisi awal
        }
    }

    document.getElementById('topUpForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const amount = document.getElementById('amount').value;
        const paymentMethod = document.getElementById('paymentMethod').value;
        const topUpButton = document.getElementById('topUpButton');

        // Validasi input
        if (!amount || amount <= 0) {
            alert('Jumlah top-up harus lebih besar dari 0.');
            return;
        }

        if (!amount || amount < 25000) {
            alert('Jumlah top-up minimal 25.000.');
            return;
        }

        if (!paymentMethod) {
            alert('Silakan pilih metode pembayaran.');
            return;
        }

        // Disable tombol dan ubah teks jadi "Memproses..."
        topUpButton.disabled = true;
        topUpButton.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Memproses...';

        try {
            // Kirim permintaan ke backend untuk mendapatkan reference
            const response = await fetch('/create-invoice', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    paymentAmount: amount,
                    paymentMethod: paymentMethod,
                    productDetail: 'Top-Up Saldo'
                })
            });

            const result = await response.json();

            if (!result.success) {
                alert(result.message || 'Gagal memproses top-up.');
                return;
            }

            // Buka popup Duitku
            checkout.process(result.reference, {
                defaultLanguage: "id",
                successEvent: function (response) {
                    console.log('Payment successful:', response);
                    alert('Pembayaran berhasil!');
                },
                pendingEvent: function (response) {
                    console.log('Payment pending:', response);
                    alert('Pembayaran sedang diproses.');
                },
                errorEvent: function (response) {
                    console.error('Payment failed:', response);
                    alert('Pembayaran gagal.');
                },
                closeEvent: function (response) {
                    console.log('Customer closed the popup:', response);
                    alert('Anda menutup popup tanpa menyelesaikan pembayaran.');
                }
            });
        } catch (error) {
            console.error('Error:', error);
            alert('Terjadi kesalahan saat memproses top-up.');
        } finally {
            topUpButton.disabled = false;
            topUpButton.innerHTML = 'Lanjutkan Top-Up';
        }
    });
</script>